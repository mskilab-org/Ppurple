% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ppurple.R
\name{ppurple}
\alias{ppurple}
\title{Probabilistic purity ploidy estimation}
\usage{
ppurple(cov, hets = NULL, segs = NULL, purities = seq(0, 1, 0.1),
  ploidies = seq(1, 5, 0.2), refine = 10, K = 20, verbose = FALSE,
  min.p = 1e-04, mc.cores = 1, numchunks = mc.cores)
}
\arguments{
\item{cov}{GRanges or data.table of genome wide coverage tiles with field $y specifying normalized coverage}

\item{hets}{GRanges or data.table of germline hets with fields $alt, $ref specifying alt and ref counts of hets in tumor}

\item{segs}{GRanges of pre-computed segments (optional, if NULL these will be computed via DNA copy of cov)}

\item{purities}{numeric vector of ploidies to sweep in grid (default from 1 to 5, 0.2 increment)}

\item{ploidies}{numeric vector of purities to sweep in grid (default from 0 to 1, 0.1 increment)}

\item{refine}{integer scalar of how many fold refinement of purities x ploidies grid to perform after initial run (default = 10, careful to not make too big)}

\item{K}{integer scalar number of copy states to model (default 20)}

\item{verbose}{logical flag}

\item{mc.cores}{integer scalar to parallelize (default = 1)}

\item{numchunks}{how many chunks to parallelize over (default = mc.cores)}
}
\description{
Computes posterior probability of purity ploidy for data with coverage cov (granges with value $y specifying coverage)
hets with $alt, $ref specifying tumor and normal alt and ref allelic counts, and (optional) segments via EM algorithm. 

If segments not specified, then it is inferred from the segmentation of cov via CBS (using DNA copy)

EM begins with initial (user specified) grid of values and then refines at 10 fold (or value of refine arg, >1)
around the modes, meaning that it reruns the calculation with a finer grid completely surrounding the modes 
to output the final solution which is a data.table mapping $purity and $ploidy values
to a posterior probability $p
}
\examples{

cov = fread(system.file("extdata", "coverage.csv", package = "Ppurple"))
hets = fread(system.file("extdata", "hets.csv", package = "Ppurple"))
segs = fread(system.file("extdata", "segs.csv", package = "Ppurple"))

pp = ppurple(cov = cov, hets = hets, verbose = TRUE)
pp = ppurple(cov = sample(dt2gr(cov), 10000), hets = sample(dt2gr(hets), 10000), segs = segs, verbose = TRUE)

}
\author{
Marcin Imielinski
}
